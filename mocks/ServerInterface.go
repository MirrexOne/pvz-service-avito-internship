// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	api "pvz-service-avito-internship/internal/handler/http/api"

	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// ServerInterface is an autogenerated mock type for the ServerInterface type
type ServerInterface struct {
	mock.Mock
}

// GetPvz provides a mock function with given fields: c, params
func (_m *ServerInterface) GetPvz(c *gin.Context, params api.GetPvzParams) {
	_m.Called(c, params)
}

// PostDummyLogin provides a mock function with given fields: c
func (_m *ServerInterface) PostDummyLogin(c *gin.Context) {
	_m.Called(c)
}

// PostLogin provides a mock function with given fields: c
func (_m *ServerInterface) PostLogin(c *gin.Context) {
	_m.Called(c)
}

// PostProducts provides a mock function with given fields: c
func (_m *ServerInterface) PostProducts(c *gin.Context) {
	_m.Called(c)
}

// PostPvz provides a mock function with given fields: c
func (_m *ServerInterface) PostPvz(c *gin.Context) {
	_m.Called(c)
}

// PostPvzPvzIdCloseLastReception provides a mock function with given fields: c, pvzId
func (_m *ServerInterface) PostPvzPvzIdCloseLastReception(c *gin.Context, pvzId uuid.UUID) {
	_m.Called(c, pvzId)
}

// PostPvzPvzIdDeleteLastProduct provides a mock function with given fields: c, pvzId
func (_m *ServerInterface) PostPvzPvzIdDeleteLastProduct(c *gin.Context, pvzId uuid.UUID) {
	_m.Called(c, pvzId)
}

// PostReceptions provides a mock function with given fields: c
func (_m *ServerInterface) PostReceptions(c *gin.Context) {
	_m.Called(c)
}

// PostRegister provides a mock function with given fields: c
func (_m *ServerInterface) PostRegister(c *gin.Context) {
	_m.Called(c)
}

// NewServerInterface creates a new instance of ServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ServerInterface {
	mock := &ServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
